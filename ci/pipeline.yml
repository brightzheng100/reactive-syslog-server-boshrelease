---
resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
resources:
- name: repo
  type: git
  source:
    uri: git@github.com:making/reactive-syslog-server-boshrelease.git
    branch: master
    private_key: {{github-private-key}}
- name: repo-version
  type: semver
  source:
    uri: git@github.com:making/reactive-syslog-server-boshrelease.git
    branch: version
    private_key: {{github-private-key}}
    file: version
    driver: git
- name: source
  type: git
  source:
    uri: git@github.com:making/reactive-syslog-server.git
    branch: master
    private_key: {{github-private-key}}
- name: director
  type: bosh-deployment
  source:
    deployment: reactive-syslog-server
    target: {{bosh-environment}}
    client: {{bosh-client}}
    client_secret: {{bosh-client-secret}}
    ca_cert: {{bosh-ca-cert}}
- name: gh-release
  type: github-release
  source:
    user: making
    repository: nexus-boshrelease
    access_token: {{github-access-token}}
jobs:
- name: bosh-deploy
  plan:
  - aggregate:
    - get: repo
      trigger: true
    - get: source
      trigger: true
  - task: mvn-package
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: latest
      inputs:
      - name: source
      outputs:
      - name: jars
      caches:
      - path: source/m2
      run: &MVN-PACKAGE
        path: bash
        dir: source
        args:
        - -c
        - |
          set -e
          rm -rf ~/.m2
          ln -fs $(pwd)/m2 ~/.m2
          mvn package -DskipTests=true
          cp target/*.jar ../jars/reactive-syslog-server.jar
  - task: bosh-create-release
    params:
      JDK_VERSION: 1.8.0_141
      ACCESS_KEY_ID: {{s3-access-key-id}}
      SECRET_ACCESS_KEY: {{s3-secret-access-key}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: starkandwayne/concourse
          tag: latest
      inputs:
      - name: repo
      - name: jars
      outputs:
      - name: releases
      caches:
      - path: repo/blobs
      - path: repo/.blobs
      run: &BOSH-CREATE-RELEASE
        path: bash
        dir: repo
        args:
        - -c
        - |
          set -e

          cat <<EOF > config/private.yml
          blobstore:
            options:
              access_key_id: ${ACCESS_KEY_ID}
              secret_access_key: ${SECRET_ACCESS_KEY}
          EOF

          if [ ! -f blobs/java/openjdk-${JDK_VERSION}.tar.gz ];then
            echo "Download OpenJDK"
            curl -L -J -O https://download.run.pivotal.io/openjdk-jdk/trusty/x86_64/openjdk-${JDK_VERSION}.tar.gz
            bosh2 add-blob openjdk-${JDK_VERSION}.tar.gz java/openjdk-${JDK_VERSION}.tar.gz
          fi

          bosh2 add-blob ../jars/reactive-syslog-server.jar reactive-syslog-server/reactive-syslog-server-0.0.1-SNAPSHOT.jar
          # bosh2 upload-blobs

          bosh2 create-release --force --timestamp-version --tarball=../releases/reactive-syslog-server-boshrelease.tgz
  - task: bosh-upload-release
    params:
      BOSH_ENVIRONMENT: {{bosh-environment}}
      BOSH_CLIENT: {{bosh-client}}
      BOSH_CLIENT_SECRET: {{bosh-client-secret}}
      BOSH_CA_CERT: {{bosh-ca-cert}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: starkandwayne/concourse
          tag: latest
      inputs:
      - name: repo
      - name: releases
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          bosh2 upload-release releases/*.tgz
          bosh2 releases
  - put: director
    params:
      manifest: repo/reactive-syslog-server.yml
      releases:
      - releases/*.tgz
      cleanup: true
      vars:
        internal_ip: {{internal-ip}}

- name: ship-it
  plan:
  - aggregate:
    - get: repo
      passed:
      - bosh-deploy
    - get: source
    - get: repo-version
  - task: mvn-package
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
          tag: latest
      inputs:
      - name: source
      outputs:
      - name: jars
      caches:
      - path: source/m2
      run:
        <<: *MVN-PACKAGE
  - task: create-release
    params:
      BOSH_ENVIRONMENT: {{bosh-environment}}
      BOSH_CLIENT: {{bosh-client}}
      BOSH_CLIENT_SECRET: {{bosh-client-secret}}
      BOSH_CA_CERT: {{bosh-ca-cert}}
      ACCESS_KEY_ID: {{s3-access-key-id}}
      SECRET_ACCESS_KEY: {{s3-secret-access-key}}
      JDK_VERSION: 1.8.0_141
      GIT_EMAIL: {{git-email}}
      GIT_NAME: {{git-name}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: starkandwayne/concourse
          tag: latest
      inputs:
      - name: repo
      - name: repo-version
      - name: jars
      outputs:
      - name: releases
      - name: updated-repo
      caches:
      - path: repo/blobs
      - path: repo/.blobs
      run:
        path: bash
        dir: repo
        args:
        - -c
        - |
          set -e

          VERSION=`cat ../repo-version/number`

          cat <<EOF > config/private.yml
          blobstore:
            options:
              access_key_id: ${ACCESS_KEY_ID}
              secret_access_key: ${SECRET_ACCESS_KEY}
          EOF

          if [ ! -f blobs/java/openjdk-${JDK_VERSION}.tar.gz ];then
            echo "Download OpenJDK"
            curl -L -J -O https://download.run.pivotal.io/openjdk-jdk/trusty/x86_64/openjdk-${JDK_VERSION}.tar.gz
            bosh2 add-blob openjdk-${JDK_VERSION}.tar.gz java/openjdk-${JDK_VERSION}.tar.gz
          fi


          TARBALL=reactive-syslog-server-${VERSION}.tgz
          bosh2 add-blob ../jars/reactive-syslog-server.jar reactive-syslog-server/reactive-syslog-server-0.0.1-SNAPSHOT.jar
          bosh2 create-release --force --version=${VERSION} --final --tarball=../releases/${TARBALL}

          SHA1=`sha1sum ../releases/${TARBALL}`
          mkdir -p .sha1
          echo ${SHA1} > .sha1/${VERSION}

          git config --global user.email "${GIT_EMAIL}"
          git config --global user.name "${GIT_NAME}"
          git add -A
          git commit -m "Release ${VERSION}"

          shopt -s dotglob
          cp -r ./* ../updated-repo

          cat << EOF > ../releases/note.md
          ``` yaml
          releases:
          - name: reactive-syslog-server
            version: ${VERSION}
            url: https://github.com/making/reactive-syslog-server-boshrelease/releases/download/${VERSION}/${TARBALL}
            sha1: ${SHA1}
          ```
          EOF
  - put: repo
    params:
      repository: updated-repo
      tag: repo-version/number
  - put: gh-release
    params:
      name: repo-version/number
      tag: repo-version/number
      body: releases/note.md
      globs:
      - releases/*.tgz



########################################

- name: bump-to-next-patch-version
  plan:
  - aggregate:
    - get: repo
      trigger: true
      passed:
      - ship-it
    - get: repo-version
      params:
        bump: patch
  - put: repo-version
    params:
      file: repo-version/number

- name: bump-to-next-minor-version
  plan:
  - aggregate:
    - get: repo-version
      params:
        bump: minor
  - put: repo-version
    params:
      file: repo-version/number

- name: bump-to-next-majar-version
  plan:
  - aggregate:
    - get: repo-version
      params:
        bump: majar
  - put: repo-version
    params:
      file: repo-version/number




